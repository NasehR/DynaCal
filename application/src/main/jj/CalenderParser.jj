//TODO:
// Comment
// Document
PARSER_BEGIN(CalendarParser)

//import edu.curtin.dynacal.repeats.RepeatPlugin;
//import edu.curtin.dynacal.notify.NotifyPlugin;

import edu.curtin.dynacal.api.IEvent;
import edu.curtin.dynacal.api.TODCalendarEvent;
import edu.curtin.dynacal.api.AllDayCalendarEvent;
import java.io.FileInputStream;
import java.text.ParseException;import java.util.List;

public class CalendarParser {
    private List<IEvent> events = new ArrayList<>();
//    private List<RepeatPlugin> repeatPlugins = new ArrayList<>();
//    private List<NotifyPlugin> notifyPlugins = new ArrayList<>();

    public List<IEvent> getEvents() {
        return events;
    }

    public void parse(String file)
    {
        try {
            CalendarParser parser = new CalendarParser(new FileInputStream(file));
            parser.parse();
        } catch (ParseException e) {
            String message = e.getMessage();
        }
    }
}

PARSER_END(CalendarParser)

SKIP: { " " | "\t" | "\n" | "\r" }

TOKEN: {
  < DATE: "([0-9]{4}-[0-9]{2}-[0-9]{2})" > |
  < TIME: "([0-9]{2}:[0-9]{2}:[0-9]{2})" > |
  < DURATION: "(\d+)" > |
  < TITLE: "\"" (~["\""])* "\"" > |
  < ALLDAY: "all-day" >
}

IEvent parseEvent() :
{
    Token date, time, duration, title;
}
{
    "event" <DATE> (date = <DATE>) <TIME> (time = <TIME>) <DURATION> (duration = <DURATION>) <TITLE> (title = <TITLE>)
    {
        IEvent event = new TODCalendarEvent(date, time, duration, title);
        System.out.println("Event: Date = " + date + ", Time = " + time + ", Duration = " + duration + ", Title = " + title);
    }
    | "event" <DATE> (date = <DATE>) <ALLDAY> <TITLE> (title = <TITLE>)
    {
        IEvent event = new AllDayCalendarEvent(date, title);
        System.out.println("Event: Date = " + date + ", All Day, Title = " + title);
    }
}

/*
void parsePlugin() :
{
    Token pluginName;
}
{

}

void parseScript() :
{
    Token scriptName;
}
{
    "script" <TITLE> (scriptName = <TITLE>)
    {
        System.out.println("Script: " + scriptName);
    }
}
 */